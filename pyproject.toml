[tool.poetry]
name = "ida-snowflake-platform"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [
    { include = "template" },
    { include = "snowflakecredentials", from = "common/modules/snowflake-credentials" },
]

[tool.poetry.dependencies]
python = "^3.10"
cookiecutter = "^2.1.1"
pyyaml = "^6.0"
check-jsonschema = "^0.20.0"
jsonschema = { extras = ["format"], version = "^4.17.3" }
gitpython = "^3.1.30"
requests = "^2.31.0"
pydantic = "^1.10.7"
tftest = "^1.8.4"
boto3 = "^1.26.142"

[tool.poetry.scripts]
get-plan = "scripts.terraform-api:get_latest_plan"


[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
pylint = "^2.15.10"
flake8 = "^6.0.0"
pytest = "^7.2.0"
snowflake-connector-python = { extras = [
    "pandas",
    "secure-local-storage",
], version = "^3.0.1" }
cryptography = "^39.0.2"
tftest = "^1.8.2"
python-dotenv = "^1.0.0"
pytest-xdist = { extras = ["psutil"], version = "^3.2.1" }
pytest-dotenv = "^0.5.2"
mypy = "^1.2.0"
types-requests = "^2.30.0.0"
pytest-md-report = "^0.3.0"
autoflake = "^2.1.1"
pytest-github-actions-annotate-failures = "^0.2.0"
aws-lambda-powertools = {extras = ["all"], version = "^2.18.0"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
norecursedirs = 'scripts .github .tmp docs .terraform'
markers = [
    "snowflake: tests that involve snowflake",
    "platform: tests that involve the Platform domain",
    "private_key: authentication with private_key",
    "acceptance_test: tests that involve tftest apply",
    "domain_test: domain tests",
]

[tool.autoflake]
remove-unused-variables = true
remove-all-unused-imports = true
in-place = true
recursive = true
